<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox10.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        urbVVv8fZy2BtvLLjPAAAAAASUVORK5CYII=
</value>
  </data>
</root>